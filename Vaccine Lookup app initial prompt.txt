Got it ? I’ll generate a structured, polished, final prompt you can paste directly into Cursor. It will clearly define context, inputs, user flow, system behavior, and output requirements — no fluff, just complete, actionable steps.Here’s the final Cursor prompt for your vaccine information application:Prompt for Cursor:You are building a Vaccine Information Web Application that can later be extended into a mobile app. Follow the specifications below carefully.Context* Purpose: Provide accurate, FDA-sourced vaccine information to users in a clean, easy-to-navigate interface.* Audience: General public, parents, caregivers, and healthcare professionals seeking vaccine details.* Platform: Start as a web application (responsive, modern UI), designed so it can be later packaged as a mobile app (using React Native or similar).Accepted Inputs* User selects a vaccine from a dropdown list of FDA-approved vaccines.* Data must be fetched in real-time from FDA’s site (starting point: https://www.fda.gov/vaccines-blood-biologics/vaccines/vaccines-licensed-use-united-states).* Explore if FDA offers an API or structured dataset. If not, scrape or parse FDA.gov pages.* Inputs: Dropdown selection only (no free-text input required).User Flow (Step-by-Step)1. User lands on the home page with a brief description of the app’s purpose.2. User sees a dropdown list of FDA-approved vaccines.3. User selects a vaccine.4. App queries FDA (and/or other trusted data sources, e.g., clinical trial databases).5. App displays a results page with:o Date vaccine was added to childhood schedule (if applicable)o Manufacturero Clinical trial period (duration of monitoring)o Number of participants in the trialo Age range of participantso Adverse effects discovered + rate of occurrence6. User can return to the dropdown to query another vaccine.System Behavior* Frontend:o Use React (with TypeScript) for a scalable, responsive UI.o Dropdown component populated dynamically from FDA data.o Results displayed in a structured card/table format.* Backend:o Use Node.js + Express for API requests and data processing.o Create an API layer that queries FDA.gov and parses vaccine details.o Store frequently accessed vaccine data in a database for caching and faster queries.* Database:o Use PostgreSQL for structured data (scalable, reliable).o Include tables for vaccines, manufacturers, clinical trial data, and adverse effects.* Mobile-readiness (Phase 2):o Codebase should be structured so frontend logic can be ported to React Native.o API/backend should remain the same for both web and mobile clients.* Error Handling:o Show clear error messages if FDA data cannot be fetched.o Provide fallback information if live API is unavailable (cached DB data).Output Requirements* Deliver a scaffolded full-stack application with:o React + TypeScript frontendo Node.js/Express backendo PostgreSQL database setup* Include a clean, professional UI with cards/tables for results.* Code should be modular, well-documented, and production-ready.* Follow modern best practices (REST API, environment variables for API keys, etc.).* Provide clear README documentation for setup and deployment.Build this application according to the above specifications.